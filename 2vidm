function getVidmNames(jsonInput) {
    // Function to extract vidm names recursively
    function extractVidmNames(obj, parentKey) {
        if (typeof obj !== 'object' || obj === null) {
            return [];
        }
        
        var vidmNames = [];
        
        if (Array.isArray(obj)) {
            for (var i = 0; i < obj.length; i++) {
                vidmNames = vidmNames.concat(extractVidmNames(obj[i], parentKey));
            }
        } else {
            for (var key in obj) {
                if (key === 'mgmt' && Array.isArray(obj[key])) {
                    var count = 0;
                    for (var j = 0; j < obj[key].length; j++) {
                        var item = obj[key][j];
                        if (item.type === 'vidm') {
                            vidmNames.push({ name: item.vmname, parent: parentKey });
                            count++;
                        }
                    }
                    if (count === 2) {
                        reportParents.add(parentKey);
                    }
                } else {
                    vidmNames = vidmNames.concat(extractVidmNames(obj[key], key));
                }
            }
        }
        return vidmNames;
    }

    var reportParents = new java.util.HashSet();
    var vidmNamesList = extractVidmNames(jsonInput, '');
    
    return {
        vidmNames: vidmNamesList.map(function(item) { return item.name; }),
        parentsWithTwoVidm: Array.from(reportParents)
    };
}

// Example JSON input
var jsonString = '{"xyz":{"mgmt":[{"type":"vidm","vmname":"abc"}]},"abc":{"mgmt":[{"type":"vidm","vmname":"123"},{"type":"vidm","vmname":"456"}]}}';
var jsonObject = JSON.parse(jsonString);

var result = getVidmNames(jsonObject);
System.log("Vidm Names: " + result.vidmNames.join(', '));
System.log("Parents with 2 vidm: " + result.parentsWithTwoVidm.join(', '));
